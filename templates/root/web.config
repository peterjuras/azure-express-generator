<configuration>
     <system.webServer>
          <handlers>
               <!-- indicates that the app.js file is a node.js application to be handled by the iisnode module -->
               <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
          </handlers>
          <rewrite>
               <rules>
                    <!-- Don't interfere with requests for logs -->
                    <rule name="LogFile" patternSyntax="ECMAScript" stopProcessing="true">
                         <match url="^[a-zA-Z0-9_\-]+\.js\.logs\/\d+\.txt$"/>
                    </rule>

                <!-- Don't interfere with requests for node-inspector debugging -->
                <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^server.js\/debug[\/]?" />
                </rule>

                <!-- First we consider whether the incoming URL matches a physical file
                in the /public folder -->
                <rule name="StaticContent">
                  <action type="Rewrite" url="public{REQUEST_URI}"/>
                </rule>

                <!-- Check whether a default document exists -->
                <!-- e.g. http://host/public/folder/ where folder is a directory
                in which a default document exists. -->
                <rule name="Directory" stopProcessing="true">
                  <match url=".*/$"/>
                  <conditions logicalGrouping="MatchAny">
                    <add input="{REQUEST_FILENAME}index.html" matchType="IsFile"/>
                    <!-- Eventual further default documents -->
                    <!-- <add input="{REQUEST_FILENAME}index.htm" matchType="IsFile"/> -->
                    <!-- <add input="{REQUEST_FILENAME}index.php" matchType="IsFile"/> -->
                    <!-- <add input="{REQUEST_FILENAME}start.html" matchType="IsFile"/> -->
                    <!-- etc. -->
                  </conditions>
                  <!-- If you have more than one default document comment out the
                  action to let IIS search for the correct document. -->
                  <action type="Rewrite" url="{R:0}index.html"/>
                </rule>

                <!-- e.g. http://host/public/folder where folder is a directory
                in which a default document actually exists. If found, the user is
                redirected to set the correct URL in the browser. -->
                <rule name="DirectoryWithoutSlash">
                  <match url="(public)(.*/.+[^/]$)"/>
                  <conditions logicalGrouping="MatchAny">
                    <add input="{REQUEST_FILENAME}/index.html" matchType="IsFile"/>
                    <!-- Eventual further default documents -->
                    <!-- <add input="{REQUEST_FILENAME}/index.htm" matchType="IsFile"/> -->
                    <!-- <add input="{REQUEST_FILENAME}/index.php" matchType="IsFile"/> -->
                    <!-- <add input="{REQUEST_FILENAME}/start.html" matchType="IsFile"/> -->
                    <!-- etc. -->
                  </conditions>
                  <action type="Redirect" redirectType="Permanent" url="{R:2}/"/>
                </rule>

                <!-- All other URLs are mapped to the Node.js application entry point -->
                <rule name="DynamicContent">
                  <conditions>
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                  </conditions>
                  <action type="Rewrite" url="server.js"/>
                </rule>

               </rules>
          </rewrite>
          <!-- You can control how Node is hosted within IIS using the following options -->
       <!--<iisnode
         node_env="%node_env%"
         nodeProcessCommandLine="&quot;%programfiles%\nodejs\node.exe&quot;"
         nodeProcessCountPerApplication="1"
         maxConcurrentRequestsPerProcess="1024"
         maxNamedPipeConnectionRetry="3"
         namedPipeConnectionRetryDelay="2000"
         maxNamedPipeConnectionPoolSize="512"
         maxNamedPipePooledConnectionAge="30000"
         asyncCompletionThreadCount="0"
         initialRequestBufferSize="4096"
         maxRequestBufferSize="65536"
         watchedFiles="*.js"
         uncFileChangesPollingInterval="5000"
         gracefulShutdownTimeout="60000"
         loggingEnabled="true"
         logDirectoryNameSuffix="logs"
         debuggingEnabled="true"
         debuggerPortRange="5058-6058"
         debuggerPathSegment="debug"
         maxLogFileSizeInKB="128"
         appendToExistingLog="false"
         logFileFlushInterval="5000"
         devErrorsEnabled="true"
         flushResponse="false"
         enableXFF="false"
         promoteServerVars=""
        />-->
          <iisnode watchedFiles="*.js;node_modules\*;routes\*.js;libs\*.js"/>
     </system.webServer>
</configuration>